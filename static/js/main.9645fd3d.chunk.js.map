{"version":3,"sources":["components/Header/Header.component.jsx","components/SearchBox/SearchBox.component.jsx","components/Card/Card.component.jsx","components/CardList/CardList.component.jsx","App.js","index.js"],"names":["Header","SearchBox","props","type","placeholder","onChange","event","target","value","Card","className","src","index","alt","name","email","CardList","allMonsters","map","monster","id","App","useState","error","setError","monsters","setMonsters","filteredMonsters","setFilteredMonsters","searchTerm","setSearchTerm","fetchMonsters","a","fetch","res","json","useEffect","filter","toLowerCase","includes","message","ReactDOM","render","document","getElementById"],"mappings":"4SAYeA,MARA,IAEX,iCACE,uD,MCOSC,MAVIC,GAEb,uBACAC,KAAK,SACLC,YAAY,mBACZC,SAAUC,GAASJ,EAAMG,SAASC,EAAMC,OAAOC,S,MCItCC,MAVDP,GAEV,sBAAKQ,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BT,EAAMU,MAAhC,0BAA+DC,IAAI,YAC3E,6BAAKX,EAAMY,OACX,4BAAIZ,EAAMa,W,MCcDC,MAhBGd,GAEd,qBAAKQ,UAAU,YAAf,SACGR,EAAMe,YAAYC,KAAI,CAACC,EAASP,IAE/B,cAAC,EAAD,CAEAA,MAAOO,EAAQC,GACfN,KAAMK,EAAQL,KACdC,MAAOI,EAAQJ,OAHVH,O,MC2CES,MA/CH,KAAO,MAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEgBF,mBAAS,IAFzB,mBAETG,EAFS,KAECC,EAFD,OAGgCJ,mBAAS,IAHzC,mBAGTK,EAHS,KAGSC,EAHT,OAIoBN,mBAAS,IAJ7B,mBAITO,EAJS,KAIGC,EAJH,KAMVC,EAAa,uCAAG,4BAAAC,EAAA,+EAEFC,MAAM,8CAFJ,cAEdC,EAFc,gBAGNA,EAAIC,OAHE,OAGlBD,EAHkB,OAIlBR,EAAYQ,GACZN,EAAoBM,GALF,kDAOlBV,EAAS,EAAD,IAPU,0DAAH,qDA4BnB,OAjBAY,qBAAU,KAENR,EADEC,EAEAJ,EAASY,QAAQlB,GACfA,EAAQL,KAAKwB,cAAcC,SAASV,EAAWS,iBAI/Bb,KAGrB,CAACI,IAEJO,qBAAU,KACRL,MACC,IAECR,EACK,qBAAKb,UAAU,MAAf,SAAsBa,EAAMiB,UAInC,sBAAK9B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAWL,SAAUyB,IACrB,cAAC,EAAD,CAAUb,YAAaU,QC9C7Bc,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9645fd3d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './Header.styles.css';\r\n \r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1>Monster-Rolodex.inc</h1>\r\n    </header>\r\n  );\r\n};\r\n \r\nexport default Header;","import React from 'react';\r\n\r\nimport './SearchBox.styles.css';\r\n\r\nconst SearchBox = (props) => {\r\n  return (\r\n      <input \r\n      type='search'\r\n      placeholder='Search a monster'\r\n      onChange={event => props.onChange(event.target.value)}\r\n      />\r\n  );\r\n};\r\n\r\nexport default SearchBox;","import React from 'react';\r\nimport './Card.styles.css';\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className='card-container'>\r\n      <img src={`https://robohash.org/${props.index}?set=set2&size=180x180`} alt=\"monster\"/>\r\n      <h2>{props.name}</h2>\r\n      <p>{props.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;","import React from 'react';\r\n\r\nimport Card from '../Card/Card.component';\r\n\r\nimport './CardList.styles.css';\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className='card-list'>\r\n      {props.allMonsters.map((monster, index) => {\r\n      return (\r\n        <Card \r\n        key={index}\r\n        index={monster.id} \r\n        name={monster.name} \r\n        email={monster.email}/>\r\n      );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardList;","import React, { useState, useEffect } from \"react\";\n\nimport Header from \"./components/Header/Header.component\";\nimport SearchBox from \"./components/SearchBox/SearchBox.component\";\nimport CardList from \"./components/CardList/CardList.component\";\n\nimport \"./styles.css\";\n\nconst App = () => {\n  const [error, setError] = useState(\"\");\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const fetchMonsters = async () => {\n    try {\n      let res = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n      res = await res.json();\n      setMonsters(res);\n      setFilteredMonsters(res);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  useEffect(() => {\n    if (searchTerm) {\n      setFilteredMonsters(\n        monsters.filter((monster) =>\n          monster.name.toLowerCase().includes(searchTerm.toLowerCase())\n        )\n      );\n    } else {\n      setFilteredMonsters(monsters);\n    }\n    // eslint-disable-next-line\n  }, [searchTerm]);\n\n  useEffect(() => {\n    fetchMonsters();\n  }, []);\n\n  if (error) {\n    return <div className=\"app\">{error.message}</div>;\n  }\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <SearchBox onChange={setSearchTerm} />\n      <CardList allMonsters={filteredMonsters} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}